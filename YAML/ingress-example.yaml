apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-odoo-hotel
  namespace: development
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-production
    cert-manager.io/acme-challenge-type: http01
    cert-manager.io/http01-edit-in-place: "true"
    #nginx.ingress.kubernetes.io/ssl-redirect: "false"
    #nginx.ingress.kubernetes.io/use-regex: "true"
    #nginx.ingress.kubernetes.io/rewrite-target: /$2
    #nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    #nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    #nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,X-LANG,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Api-Key,X-Device-Id,Access-Control-Allow-Origin"
    #nginx.ingress.kubernetes.io/cors-max-age: "86400"
    #nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  tls:
  - hosts:
    - domain.com
    secretName: tls-odoo
  rules:
    - host: domain.com
      http:
        paths:
          # - path: /be(/|$)(.*)
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service-odoo-hotel
                port:
                  number: 80